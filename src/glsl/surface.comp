#version 460 core

layout (local_size_x = 16, local_size_y = 4, local_size_z = 1) in;

readonly buffer density_block
{
    float density[];
};

writeonly buffer surface_block
{
    float surface[];
};

layout(binding = 0) uniform atomic_uint index;

void main()
{
    const uint id = uint(dot(
        gl_GlobalInvocationID,
        vec3(1, gl_NumWorkGroups.x, gl_NumWorkGroups.y * gl_NumWorkGroups.x)
    ));
    surface[id] = density[id];

    // TODO Do some logic to work out how many verts we are adding
    const uint tris = 4;
    const uint verts = tris * 3;
    const uint floats = verts * 3;

    const uint start = atomicCounterAdd(index, floats);

    for (uint i = start; i < start + floats; ++i)
    {
        // TODO Populate the surface buffer
        surface[i] = 1.0;
    }
}
